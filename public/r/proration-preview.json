{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "proration-preview",
  "type": "registry:block",
  "title": "Proration Preview",
  "description": "A component that shows cost breakdown and proration when changing subscription plans",
  "dependencies": [
    "lucide-react",
    "class-variance-authority",
    "motion"
  ],
  "registryDependencies": [
    "card",
    "button",
    "badge",
    "separator",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/proration-preview.tsx",
      "content": "\"use client\";\n\nimport { motion } from \"motion/react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ArrowRight, Calendar, CreditCard, Calculator, Clock } from \"lucide-react\";\nimport { type Plan, type CurrentPlan } from \"@/lib/billingsdk-config\";\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst prorationPreviewVariants = cva(\"w-full max-w-4xl mx-auto\", {\n  variants: {\n    theme: {\n      minimal: \"\",\n      classic: \"relative overflow-hidden rounded-xl border border-border/50 bg-gradient-to-br from-card/50 to-muted/30 backdrop-blur-sm\",\n    },\n    size: {\n      small: \"text-sm\",\n      medium: \"text-base\", \n      large: \"text-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n    size: \"medium\",\n  },\n});\n\nconst cardVariants = cva(\"transition-all duration-300\", {\n  variants: {\n    theme: {\n      minimal: \"border border-border bg-card\",\n      classic: \"border border-border/30 bg-gradient-to-br from-card/80 to-muted/20 backdrop-blur-sm shadow-lg\",\n    },\n  },\n  defaultVariants: {\n    theme: \"minimal\",\n  },\n});\n\nexport interface ProrationPreviewProps extends VariantProps<typeof prorationPreviewVariants> {\n  className?: string;\n  currentPlan: CurrentPlan;\n  newPlan: Plan;\n  billingCycle: 'monthly' | 'yearly';\n  daysRemaining?: number;\n  effectiveDate?: string;\n  onConfirm?: () => void;\n  onCancel?: () => void;\n  confirmText?: string;\n  cancelText?: string;\n}\n\nexport function ProrationPreview({\n  className,\n  currentPlan,\n  newPlan,\n  billingCycle,\n  daysRemaining = 15,\n  effectiveDate = \"immediately\",\n  onConfirm,\n  onCancel,\n  confirmText = \"Confirm Change\",\n  cancelText = \"Cancel\",\n  theme = \"minimal\",\n  size = \"medium\",\n}: ProrationPreviewProps) {\n  \n  // Calculate current plan pricing\n  const currentPrice = parseFloat(\n    currentPlan.type === 'monthly' ? currentPlan.plan.monthlyPrice : \n    currentPlan.type === 'yearly' ? currentPlan.plan.yearlyPrice :\n    currentPlan.price || '0'\n  );\n  \n  // Calculate new plan pricing  \n  const newPrice = parseFloat(\n    billingCycle === 'monthly' ? newPlan.monthlyPrice : newPlan.yearlyPrice\n  );\n\n  // Calculate proration\n  const totalDaysInCycle = currentPlan.type === 'yearly' ? 365 : 30;\n  const unusedDays = daysRemaining;\n  const creditAmount = (currentPrice / totalDaysInCycle) * unusedDays;\n  const prorationDays = billingCycle === 'yearly' ? 365 - unusedDays : 30 - unusedDays;\n  const proratedCharge = (newPrice / (billingCycle === 'yearly' ? 365 : 30)) * prorationDays;\n  \n  const netAmount = proratedCharge - creditAmount;\n  const isUpgrade = newPrice > currentPrice;\n  const isDowngrade = newPrice < currentPrice;\n\n  return (\n    <div className={cn(prorationPreviewVariants({ theme, size }), className)}>\n      {theme === \"classic\" && (\n        <>\n          <div className=\"absolute inset-0 bg-grid-pattern opacity-5\" />\n          <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-64 h-64 bg-primary/5 rounded-full blur-3xl\" />\n        </>\n      )}\n      \n      <Card className={cn(cardVariants({ theme }))}>\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-xl\">\n            <div className=\"p-2 rounded-lg bg-primary/10 ring-1 ring-primary/20\">\n              <Calculator className=\"h-5 w-5 text-primary\" />\n            </div>\n            Plan Change Preview\n          </CardTitle>\n          <p className=\"text-muted-foreground\">\n            Review the charges and credits for your plan change\n          </p>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6\">\n          {/* From/To Plans */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-center\">\n            {/* Current Plan */}\n            <motion.div\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.3 }}\n              className={cn(\n                \"p-4 rounded-lg border\",\n                theme === \"classic\" \n                  ? \"bg-gradient-to-br from-muted/50 to-background/50 border-border/50\"\n                  : \"bg-muted/50 border-border\"\n              )}\n            >\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Badge variant=\"outline\" className=\"text-xs\">Current</Badge>\n                {isDowngrade && (\n                  <Badge variant=\"secondary\" className=\"text-xs bg-orange-500/10 text-orange-700 border-orange-200\">\n                    Downgrading\n                  </Badge>\n                )}\n              </div>\n              <h3 className=\"font-semibold text-lg\">{currentPlan.plan.title}</h3>\n              <p className=\"text-sm text-muted-foreground mb-3\">\n                {currentPlan.plan.currency}{currentPrice}/{currentPlan.type}\n              </p>\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Clock className=\"h-3 w-3\" />\n                {daysRemaining} days remaining\n              </div>\n            </motion.div>\n\n            {/* Arrow */}\n            <div className=\"flex justify-center\">\n              <motion.div\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.3, delay: 0.2 }}\n                className={cn(\n                  \"p-2 rounded-full\",\n                  theme === \"classic\" \n                    ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-lg\"\n                    : \"bg-primary/10 text-primary\"\n                )}\n              >\n                <ArrowRight className=\"h-4 w-4\" />\n              </motion.div>\n            </div>\n\n            {/* New Plan */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.3, delay: 0.1 }}\n              className={cn(\n                \"p-4 rounded-lg border\",\n                theme === \"classic\"\n                  ? \"bg-gradient-to-br from-primary/5 to-primary/10 border-primary/30\"\n                  : \"bg-primary/5 border-primary/30\"\n              )}\n            >\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Badge variant=\"default\" className=\"text-xs\">New Plan</Badge>\n                {isUpgrade && (\n                  <Badge variant=\"secondary\" className=\"text-xs bg-green-500/10 text-green-700 border-green-200\">\n                    Upgrading\n                  </Badge>\n                )}\n              </div>\n              <h3 className=\"font-semibold text-lg\">{newPlan.title}</h3>\n              <p className=\"text-sm text-muted-foreground mb-3\">\n                {newPlan.currency}{newPrice}/{billingCycle}\n              </p>\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Calendar className=\"h-3 w-3\" />\n                Effective {effectiveDate}\n              </div>\n            </motion.div>\n          </div>\n\n          <Separator className={cn(\n            theme === \"classic\" && \"bg-gradient-to-r from-transparent via-border to-transparent\"\n          )} />\n\n          {/* Calculation Breakdown */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: 0.4 }}\n            className={cn(\n              \"p-4 rounded-lg border\",\n              theme === \"classic\"\n                ? \"bg-gradient-to-br from-muted/30 to-background/30 border-border/50\"\n                : \"bg-muted/30 border-border\"\n            )}\n          >\n            <h4 className=\"font-medium mb-4 flex items-center gap-2\">\n              <CreditCard className=\"h-4 w-4\" />\n              Billing Breakdown\n            </h4>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center text-sm\">\n                <span className=\"text-muted-foreground\">Credit for unused time</span>\n                <span className=\"text-green-600 font-medium\">\n                  -{newPlan.currency}{Math.abs(creditAmount).toFixed(2)}\n                </span>\n              </div>\n              \n              <div className=\"flex justify-between items-center text-sm\">\n                <span className=\"text-muted-foreground\">\n                  Prorated charge ({prorationDays} days)\n                </span>\n                <span className=\"font-medium\">\n                  +{newPlan.currency}{proratedCharge.toFixed(2)}\n                </span>\n              </div>\n              \n              <Separator className=\"my-2\" />\n              \n              <div className=\"flex justify-between items-center font-semibold\">\n                <span>\n                  {netAmount >= 0 ? \"Amount to charge\" : \"Credit to account\"}\n                </span>\n                <span className={cn(\n                  \"text-lg\",\n                  netAmount >= 0 ? \"text-foreground\" : \"text-green-600\"\n                )}>\n                  {netAmount >= 0 ? \"+\" : \"\"}{newPlan.currency}{netAmount.toFixed(2)}\n                </span>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Timeline */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.3, delay: 0.6 }}\n            className=\"text-center p-3 bg-muted/20 rounded-lg border border-border/50\"\n          >\n            <p className=\"text-sm text-muted-foreground\">\n              Your plan will change {effectiveDate}. \n              {netAmount >= 0 \n                ? ` You'll be charged ${newPlan.currency}${Math.abs(netAmount).toFixed(2)}.`\n                : ` You'll receive a ${newPlan.currency}${Math.abs(netAmount).toFixed(2)} credit.`\n              }\n            </p>\n          </motion.div>\n\n          {/* Action Buttons */}\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: 0.8 }}\n            className=\"flex flex-col sm:flex-row gap-3 pt-4\"\n          >\n            <Button\n              onClick={onConfirm}\n              className={cn(\n                \"flex-1\",\n                theme === \"classic\" && \"bg-gradient-to-r from-primary to-primary/90 hover:shadow-lg active:scale-95 transition-all duration-200\"\n              )}\n              size=\"lg\"\n            >\n              {confirmText}\n              <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={onCancel}\n              className=\"flex-1\"\n              size=\"lg\"\n            >\n              {cancelText}\n            </Button>\n          </motion.div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/billingsdk/proration-preview.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/proration-preview-demo.tsx",
      "content": "\"use client\";\n\nimport { ProrationPreview } from \"@/registry/billingsdk/proration-preview\";\nimport { plans } from \"@/lib/billingsdk-config\";\nimport type { CurrentPlan } from \"@/lib/billingsdk-config\";\n\n// Mock current plan data\nconst currentPlan: CurrentPlan = {\n  plan: plans[0], // Starter plan\n  type: 'monthly',\n  nextBillingDate: 'December 15, 2024',\n  paymentMethod: '•••• •••• •••• 4242',\n  status: 'active'\n};\n\nexport function ProrationPreviewDemo() {\n  return (\n    <div className=\"space-y-8\">\n      {/* Upgrade Scenario - Classic Theme */}\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Upgrade Preview (Classic Theme)</h3>\n        <ProrationPreview\n          currentPlan={currentPlan}\n          newPlan={plans[1]} // Pro plan\n          billingCycle=\"monthly\"\n          daysRemaining={15}\n          effectiveDate=\"immediately\"\n          theme=\"classic\"\n          size=\"medium\"\n          onConfirm={() => console.log('Plan change confirmed')}\n          onCancel={() => console.log('Plan change cancelled')}\n          className=\"mb-6\"\n        />\n      </div>\n\n      {/* Downgrade Scenario - Minimal Theme */}\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Downgrade Preview (Minimal Theme)</h3>\n        <ProrationPreview\n          currentPlan={{\n            plan: plans[1], // Pro plan\n            type: 'monthly',\n            nextBillingDate: 'December 15, 2024',\n            paymentMethod: '•••• •••• •••• 4242',\n            status: 'active'\n          }}\n          newPlan={plans[0]} // Starter plan\n          billingCycle=\"monthly\"\n          daysRemaining={8}\n          effectiveDate=\"at next billing cycle\"\n          theme=\"minimal\"\n          size=\"medium\"\n          onConfirm={() => console.log('Downgrade confirmed')}\n          onCancel={() => console.log('Downgrade cancelled')}\n          confirmText=\"Confirm Downgrade\"\n          className=\"mb-6\"\n        />\n      </div>\n\n      {/* Yearly Billing Scenario */}\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">Switch to Yearly Billing</h3>\n        <ProrationPreview\n          currentPlan={{\n            plan: plans[1], // Pro plan\n            type: 'monthly',\n            nextBillingDate: 'December 15, 2024', \n            paymentMethod: '•••• •••• •••• 4242',\n            status: 'active'\n          }}\n          newPlan={plans[1]} // Same Pro plan but yearly\n          billingCycle=\"yearly\"\n          daysRemaining={20}\n          effectiveDate=\"immediately\"\n          theme=\"classic\"\n          size=\"large\"\n          onConfirm={() => console.log('Yearly billing confirmed')}\n          onCancel={() => console.log('Yearly billing cancelled')}\n          confirmText=\"Switch to Yearly\"\n        />\n      </div>\n    </div>\n  );\n}",
      "type": "registry:component",
      "target": "components/proration-preview-demo.tsx"
    },
    {
      "path": "src/registry/lib/billingsdk-config.ts",
      "content": "export interface Plan {\n    id: string\n    title: string\n    description: string\n    highlight?: boolean\n    type?: 'monthly' | 'yearly'\n    currency?: string\n    monthlyPrice: string\n    yearlyPrice: string\n    buttonText: string\n    badge?: string\n    features: {\n        name: string\n        icon: string\n        iconColor?: string\n    }[]\n}\n\nexport interface CurrentPlan {\n    plan: Plan\n    type: 'monthly' | 'yearly' | 'custom'\n    price?: string\n    nextBillingDate: string\n    paymentMethod: string\n    status: 'active' | 'inactive' | 'past_due' | 'cancelled'\n}\n\nexport const plans: Plan[] = [\n    {\n        id: 'starter',\n        title: 'Starter',\n        description: 'For developers testing out Liveblocks locally.',\n        currency: '$',\n        monthlyPrice: '0',\n        yearlyPrice: '0',\n        buttonText: 'Start today for free',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'pro',\n        title: 'Pro',\n        description: 'For companies adding collaboration in production.',\n        currency: '$',\n        monthlyPrice: '20',\n        yearlyPrice: '199',\n        buttonText: 'Sign up',\n        badge: 'Most popular',\n        highlight: true,\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    },\n    {\n        id: 'enterprise',\n        title: 'Enterprise',\n        description: 'For organizations that need more support and compliance features.',\n        currency: '$',\n        monthlyPrice: 'Custom',\n        yearlyPrice: 'Custom',\n        buttonText: 'Contact sales',\n        features: [\n            {\n                name: 'Presence',\n                icon: \"check\",\n                iconColor: 'text-green-500'\n            },\n            {\n                name: 'Comments',\n                icon: \"check\",\n                iconColor: 'text-orange-500'\n            },\n            {\n                name: 'Notifications',\n                icon: \"check\",\n                iconColor: 'text-teal-500'\n            },\n            {\n                name: 'Text Editor',\n                icon: \"check\",\n                iconColor: 'text-blue-500'\n            },\n            {\n                name: 'Sync Datastore',\n                icon: \"check\",\n                iconColor: 'text-zinc-500'\n            }\n        ],\n    }\n];\n",
      "type": "registry:lib",
      "target": "lib/billingsdk-config.ts"
    }
  ]
}